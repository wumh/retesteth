{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "(gdb) Launch",
            "type": "cppdbg",
            "request": "launch",
            "program": "/home/wumh/1/retesteth/build/retesteth/retesteth",
            "args": [
                "-t",
                // "GeneralStateTests/stCallCodes",
                // "GeneralStateTests/stPreCompiledContracts",
                // "GeneralStateTests/stTransactionTest",
                // "GeneralStateTests/stCallCodes",
                // "GeneralStateTests/stStackTests",

                // "GeneralStateTests/stDebug",
                // "GeneralStateTests",
            //    "GeneralStateTests/stExample",
                "BlockchainTests",
                //"BlockchainTests/InvalidBlocks/bcForgedTest",
                //  "GeneralStateTests/stExtCodeHash",
                // "BlockchainTests/ValidBlocks/VMTests/vmArithmeticTest",
                // "BlockchainTests/TransitionTests/bcEIP158ToByzantium",
                // "BlockchainTests/TransitionTests",
                // "BlockchainTests/ValidBlocks",
                // "BlockchainTests/ValidBlocks/bcBlockGasLimitTest",
                // "BlockchainTests/ValidBlocks/bcBlockGasLimitTest",
                // "BlockchainTests/ValidBlocks/bcValidBlockTest",
                // "BlockchainTests/ValidBlocks/vmArithmeticTest",
                // "BlockchainTests/ValidBlocks/VMTests/vmArithmeticTest",
                // "BlockchainTests/InvalidBlocks/bcUncleTest",
                // "BlockchainTests/InvalidBlocks/bcBlockGasLimitTest",
                 //"BlockchainTests/ValidBlocks/bcStateTests",
                 //"BlockchainTests/InvalidBlocks/bcForgedTest",
                // "BlockchainTests/ValidBlocks/bcBlockGasLimitTest",
                // "BlockchainTests/InvalidBlocks/bcUncleSpecialTests",
                //"BlockchainTests/ValidBlocks/bcRandomBlockhashTest",
                //"BlockchainTests/ValidBlocks/bcTotalDifficultyTest",
                //"BlockchainTests/ValidBlocks/VMTests/vmSha3Test"
                
                

                "--",
                "--filltests",
                "--testpath",
                // "~/tests",
                "~/9-nl/tests",
                "--clients",
                "default",
                // "t8ntool",
                //"--singletest",
                //"debug",
                //"SimpleTxCosts20000",
                //"uncleBlockAtBlock3afterBlock4",
                //"randomStatetest486BC",
                // "futureUncleTimestamp3",
                // "ZeroValue_TransactionCALLwithData_ToOneStorageKey_OOGRevert",
                // "TransactionToItselfNotEnoughFounds",
                // "TransactionGasHigherThanLimit2p63m1",
                // "NotEnoughCashContractCreation",
                // "RefundOverflow",
                // "bcForkBlockTest",
                // "SuicidesMixingCoinbase",
                // "BLOCKHASH_Bounds",
                // "BadStateRootTxBC"

                // "InChainUncleFather",
                //  "callToNonExistent",
                // "debug",
                //"SimpleTxCosts20000",
                // "BlockGasLimit2p63m1",
                // "expXY_success",
                
                // "callcodecallcodecall_110",
                // "callcodecallcodecall_110_OOGE",
                // "HighGasLimit",
                // "SimpleTx3LowS",
                // "ByzantiumTransition",
                // "blockChainFrontierWithLargerTDvsHomesteadBlockchain",
                // "--stderr",
                // "--all",
                // "--lowcpu",
                // "--travisout",
                // "--vmtrace",
               // "--verbosity",
                //"6",
                // ">",
                // "~/2_debug_error_balance.log",
                // "2>&1",
                


                ],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        }
    ]
}